 (cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF' 
diff --git a/chat.py b/chat.py
index c666fbab2fc34eb77672cba141781725856ad69d..14eb10abf109af93ee2ef17b55d7f2fc4bca30c6 100644
--- a/chat.py
+++ b/chat.py
@@ -87,73 +87,77 @@ def openrouter_interact(user: str, message: str, prefix: str = "", content=SYSTE
         )
         logger.debug("OpenRouter status: %s", response.status_code)
         response.raise_for_status()
         reply = response.json()["choices"][0]["message"]["content"]
         logger.debug("Received from OpenRouter: %s", reply)
         debug_log(f"< {reply}")
         return reply
     except Exception as exc:
         logger.exception("OpenRouter request failed: %s", exc)
         return ""
 
 
 def main():
     logfile = None
     username = ""
     message = ""
     game = cp.detect_game()
     logger.debug("Detected game: %s", game)
 
     
 
     dpg.create_context()
     dpg.create_viewport(title='Chat-Strike', width=600, height=500)
 
     if sys.platform.startswith('win'):
-        font_path = os.path.join(os.environ.get('WINDIR', 'C:\\Windows'), 'Fonts', 'consola.ttf')
-        if os.path.exists(font_path):
-            with dpg.font_registry():
-                default_font = dpg.add_font(font_path, 16)
-                dpg.bind_font(default_font)
+        # Попробуем подобрать стандартный моноширинный шрифт с поддержкой кириллицы
+        win_dir = os.environ.get('WINDIR', 'C:\\Windows')
+        for fname in ("consola.ttf", "lucon.ttf", "cour.ttf"):
+            font_path = os.path.join(win_dir, "Fonts", fname)
+            if os.path.exists(font_path):
+                with dpg.font_registry():
+                    default_font = dpg.add_font(font_path, 14)
+                    dpg.bind_font(default_font)
+                break
 
     with dpg.window(label="Chat-Strike", width=600, height=180, tag="Chat-Strike"):
         dpg.add_text(f"Detected game: {game}")
         
         dpg.add_input_text(hint="Blacklisted usernames (comma separated)",
                            default_value=','.join(cp.BLACKLISTED_USERNAMES),
                            tag="usernames")
         dpg.add_input_text(hint=".log file path", default_value=cp.CON_LOG_FILE_PATH, tag="conlog")
         dpg.add_input_text(hint="OpenRouter key", default_value=OPENROUTER_API_KEY, password=True, tag="openapi_key")
         dpg.add_input_text(hint="Chat keybind", default_value=cp.CHAT_KEY, tag="chat_keybind")
 
         dpg.add_button(label="Save", callback=save_config)
         status_text = dpg.add_text("Running: False")
 
         dpg.add_button(label="Start", callback=set_status, user_data=status_text, tag="start_button")
 
     with dpg.window(label="Debug Console", width=600, height=300, pos=(0,200), tag="Debug Console"):
-        dpg.add_input_text(tag="debug_console", multiline=True, readonly=True, width=-1, height=-1)
+        dpg.add_input_text(tag="debug_console", multiline=True, readonly=True, width=-1, height=280)
 
 
 
     dpg.set_primary_window("Chat-Strike", True)
     dpg.setup_dearpygui()
     dpg.show_viewport()
 
     with dpg.handler_registry():
         dpg.add_key_press_handler(dpg.mvKey_Add, callback=set_status, user_data=status_text)
 
     if cp.config['SETTINGS']['gameconlogpath'] != None:
         logfile = open(cp.CON_LOG_FILE_PATH, encoding=cp.CON_LOG_ENCODING, errors='ignore')
         logfile.seek(0, 2)
         logger.debug("Log file opened: %s", cp.CON_LOG_FILE_PATH)
 
         
 
 
     while dpg.is_dearpygui_running():
         dpg.render_dearpygui_frame()
 
         if Status.running == True:
             if logfile:
                 
                 line = cp.rt_file_read(logfile)
 
EOF
)